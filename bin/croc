#!/usr/bin/env ruby
require "rubygems"
require "croc"

$gems = []
$classes = {}
$methods = []

install_assets

specs = get_specs

# find gem home
homes = {}
specs.each do |spec|
  spec.loaded_from =~ /^(.+)\/specifications/
  homes[$1] = true
end

$home = homes.keys.detect { |home| home !~ /^\/System/ }
$rdoc_home = File.join($home, "doc")
$gem_home = File.join($home, "gems")

puts "Indexing gems in #{$gem_home}"

# install system gems
gems_to_install = specs.select { |spec| spec.loaded_from =~ /^\/System/ }

unless gems_to_install.empty?
  puts "It looks like you're using a Mac and these gems are installed under /System:"
  puts
  puts "  #{gems_to_install.collect {|spec| "#{spec.name}-#{spec.version}"}.join(" ")}"
  puts
  puts "Croc can't index these, but installing them in your main gems directory"
  puts "should solve the problem.  Install them (may require sudo)? (y/n)"
  if gets.strip == "y"
    gems_to_install.each do |spec|
      puts "Installing #{spec.name}-#{spec.version}"
      `gem install -v #{spec.version} #{spec.name}`
    end
  else
    specs = specs - gems_to_install
  end
end

# install rdocs
rdocs_to_install = specs.select { |spec| !File.exists?(File.join($rdoc_home, "#{spec.name}-#{spec.version}", "rdoc"))}

unless rdocs_to_install.empty?
  puts "These gems have rdocs, but they're not installed:"
  puts
  puts "  #{rdocs_to_install.collect {|spec| "#{spec.name}-#{spec.version}"}.join(" ")}"
  puts
  puts "Install them (may require sudo)? (y/n)"
  if gets.strip == "y"
    rdocs_to_install.each do |spec|
      puts "Installing rdocs for #{spec.name}-#{spec.version}"
      `sudo gem rdoc -v #{spec.version} #{spec.name}`
    end
  else
    specs = specs - rdocs_to_install
  end
end

specs.each { |spec| index_gem(spec) }

idx = -1
File.open(File.join(user_home_dir, ".croc", "data.js"), "w") do |f|
  f.puts       "objs = ["
  $gems.each do |gem|
    f.puts     "  {t: 'g', p: null, n: '#{gem[:name]}', l: '#{gem[:name].downcase}', u: '#{gem[:dir]}'},"
    idx += 1
    gidx = idx
    gem[:classes].each_pair do |key, value|
      f.puts   "  {t: 'c', p: #{gidx}, n: '#{key}', l: '#{key.downcase}', u: '#{value[:url]}'},"
      idx += 1
      cidx = idx
      value[:methods].each do |method|
        f.puts "  {t: 'm', p: #{cidx}, n: '#{method[:name]}', l: '#{method[:name].downcase}', u: '#{method[:url]}'},"
        idx += 1
      end
    end
  end
  f.puts       "];"
end

puts "Bookmark file://#{File.join(user_home_dir, ".croc", "index.html")}"
